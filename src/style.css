.normalFuckingEmbed {
}
.normalFuckingEmbedItem {
}

div[class^="hoverButtonGroup-"] {
  display: none;
}

div[class^="hoverButtonGroup-"]:has(div[class*="removeAttachmentHoverButton-"]) {
  display: unset;
  position: static;
  top: unset;
  right: unset;
  cursor: unset;
}

div[class*="removeAttachmentHoverButton-"] {
  opacity: 0;
  -ms-flex-item-align: start;
  align-self: flex-start;
  -webkit-box-flex: 0;
  -ms-flex: 0 0 auto;
  flex: 0 0 auto;
  cursor: pointer;
  color: var(--interactive-normal);
  padding: 2px;
}

div[class*="removeAttachmentHoverButton-"]:hover {
  opacity: 1;
  background-color: unset;
  color: var(--interactive-hover);
}

div[class^="mediaAttachmentsContainer-"] {
  border-radius: unset;
}

.metadata {
  box-sizing: border-box;
  position: absolute;
  top: -10px;
  left: 0;
  right: 0;
  height: 80px;
  display: flex;
  align-items: flex-start;
  background-image: linear-gradient(0deg, transparent, rgba(0, 0, 0, 0.9));
  padding: 22px 12px 12px;
  z-index: 1;
}

.metadataContent {
  flex: 1 1 auto;
  white-space: nowrap;
  overflow: hidden;
}

.metadataName,
.metadataSize {
  font-weight: 500;
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
}

.metadataName {
  font-size: 16px;
  line-height: 20px;
}

.metadataSize {
  font-size: 12px;
  line-height: 16px;
  opacity: 0.7;
}

.metadataDownload {
  flex: 0 0 auto;
  opacity: 0.6;
  color: var(--text-link);
  text-decoration: var(--link-decoration);
}

.metadataDownload-3IY84h:hover {
  opacity: 1;
}

.metadataIcon {
  width: 24px;
  height: 25px;
  color: var(--white-500);
}

div[class^="wrapperPaused-"] > div.metadata,
div[class*="wrapper-"]:hover div.metadata {
  animation: metain 200ms;
}

div[class*="wrapper-"]:not(:hover) div:not([class^="wrapperPaused-"]) > div.metadata {
  animation: metaout 200ms;
  opacity: 0;
}

@keyframes metain {
  from {
    opacity: 0;
  }

  to {
    opacity: 1;
  }
}

@keyframes metaout {
  from {
    opacity: 1;
  }

  to {
    opacity: 0;
  }
}
